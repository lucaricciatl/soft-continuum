function u = input_f(Fk1_act_1,Fk1_act_2,Fk2_act_1,Fk2_act_2,Fx_ext_1,Fx_ext_2,Fz_ext_1,Fz_ext_2,My_ext_1,My_ext_2,l_1,l_2,theta_1,theta_2)
%INPUT_F
%    U = INPUT_F(FK1_ACT_1,FK1_ACT_2,FK2_ACT_1,FK2_ACT_2,FX_EXT_1,FX_EXT_2,FZ_EXT_1,FZ_EXT_2,MY_EXT_1,MY_EXT_2,L_1,L_2,THETA_1,THETA_2)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    12-Aug-2021 14:59:21

if ((1.0./1.0e+2 < abs(theta_1)) & (1.0./1.0e+2 < abs(theta_2)))
    t0 = Fz_ext_1.*((cos(conj(theta_1)).*conj(l_1))./conj(theta_1)-sin(conj(theta_1)).*conj(l_1).*1.0./conj(theta_1).^2)-(conj(l_1).*1.0./conj(theta_1).^2.*(cos(conj(theta_1))-1.0)+(sin(conj(theta_1)).*conj(l_1))./conj(theta_1)).*(Fk1_act_1+Fk1_act_2)+Fz_ext_2.*((cos(conj(theta_1)).*conj(l_1))./conj(theta_1)-sin(conj(theta_1)).*conj(l_1).*1.0./conj(theta_1).^2+(cos(conj(theta_1)).*conj(l_2).*(cos(conj(theta_2))-1.0))./conj(theta_2)-(sin(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2))./conj(theta_2))-(Fk2_act_1+Fk2_act_2).*(conj(l_1).*1.0./conj(theta_1).^2.*(cos(conj(theta_1))-1.0)+(sin(conj(theta_1)).*conj(l_1))./conj(theta_1)+(sin(conj(theta_1)).*conj(l_2).*(cos(conj(theta_2))-1.0))./conj(theta_2)+(cos(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2))./conj(theta_2))-Fx_ext_1.*(conj(l_1).*1.0./conj(theta_1).^2.*(cos(conj(theta_1))-1.0)+(sin(conj(theta_1)).*conj(l_1))./conj(theta_1))-My_ext_2.*(cos(conj(theta_1)).*cos(conj(theta_2))-sin(conj(theta_1)).*sin(conj(theta_2)))-My_ext_1.*cos(conj(theta_1))-Fx_ext_2.*(conj(l_1).*1.0./conj(theta_1).^2.*(cos(conj(theta_1))-1.0)+(sin(conj(theta_1)).*conj(l_1))./conj(theta_1)+(sin(conj(theta_1)).*conj(l_2).*(cos(conj(theta_2))-1.0))./conj(theta_2)+(cos(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2))./conj(theta_2));
elseif ((1.0./1.0e+2 < abs(theta_1)) & (abs(theta_2) < 1.0./1.0e+2))
    t0 = Fz_ext_2.*((cos(conj(theta_1)).*conj(l_2).*conj(theta_2))./2.0-sin(conj(theta_1)).*conj(l_2).*(conj(theta_2).^2./6.0+1.0)+(cos(conj(theta_1)).*conj(l_1))./conj(theta_1)-sin(conj(theta_1)).*conj(l_1).*1.0./conj(theta_1).^2)-(Fk2_act_1+Fk2_act_2).*(conj(l_1).*1.0./conj(theta_1).^2.*(cos(conj(theta_1))-1.0)+(sin(conj(theta_1)).*conj(l_2).*conj(theta_2))./2.0+cos(conj(theta_1)).*conj(l_2).*(conj(theta_2).^2./6.0+1.0)+(sin(conj(theta_1)).*conj(l_1))./conj(theta_1))+Fz_ext_1.*((cos(conj(theta_1)).*conj(l_1))./conj(theta_1)-sin(conj(theta_1)).*conj(l_1).*1.0./conj(theta_1).^2)-(conj(l_1).*1.0./conj(theta_1).^2.*(cos(conj(theta_1))-1.0)+(sin(conj(theta_1)).*conj(l_1))./conj(theta_1)).*(Fk1_act_1+Fk1_act_2)-Fx_ext_2.*(conj(l_1).*1.0./conj(theta_1).^2.*(cos(conj(theta_1))-1.0)+(sin(conj(theta_1)).*conj(l_2).*conj(theta_2))./2.0+cos(conj(theta_1)).*conj(l_2).*(conj(theta_2).^2./6.0+1.0)+(sin(conj(theta_1)).*conj(l_1))./conj(theta_1))-Fx_ext_1.*(conj(l_1).*1.0./conj(theta_1).^2.*(cos(conj(theta_1))-1.0)+(sin(conj(theta_1)).*conj(l_1))./conj(theta_1))-My_ext_2.*(cos(conj(theta_1)).*cos(conj(theta_2))-sin(conj(theta_1)).*sin(conj(theta_2)))-My_ext_1.*cos(conj(theta_1));
elseif ((abs(theta_1) < 1.0./1.0e+2) & (1.0./1.0e+2 < abs(theta_2)))
    t0 = -(Fk2_act_1+Fk2_act_2).*(conj(l_1).*(-1.0./2.0)+(sin(conj(theta_1)).*conj(l_2).*(cos(conj(theta_2))-1.0))./conj(theta_2)+(cos(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2))./conj(theta_2))+(conj(l_1).*(Fk1_act_1+Fk1_act_2))./2.0+Fz_ext_2.*((conj(l_1).*conj(theta_1))./3.0+(cos(conj(theta_1)).*conj(l_2).*(cos(conj(theta_2))-1.0))./conj(theta_2)-(sin(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2))./conj(theta_2))-Fx_ext_2.*(conj(l_1).*(-1.0./2.0)+(sin(conj(theta_1)).*conj(l_2).*(cos(conj(theta_2))-1.0))./conj(theta_2)+(cos(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2))./conj(theta_2))+(Fx_ext_1.*conj(l_1))./2.0-My_ext_2.*(cos(conj(theta_1)).*cos(conj(theta_2))-sin(conj(theta_1)).*sin(conj(theta_2)))-My_ext_1.*cos(conj(theta_1))+(Fz_ext_1.*conj(l_1).*conj(theta_1))./3.0;
elseif ((abs(theta_1) < 1.0./1.0e+2) & (abs(theta_2) < 1.0./1.0e+2))
    t0 = (conj(l_1).*(Fk1_act_1+Fk1_act_2))./2.0+(Fx_ext_1.*conj(l_1))./2.0-(Fk2_act_1+Fk2_act_2).*(conj(l_1).*(-1.0./2.0)+(sin(conj(theta_1)).*conj(l_2).*conj(theta_2))./2.0+cos(conj(theta_1)).*conj(l_2).*(conj(theta_2).^2./6.0+1.0))+Fz_ext_2.*((conj(l_1).*conj(theta_1))./3.0+(cos(conj(theta_1)).*conj(l_2).*conj(theta_2))./2.0-sin(conj(theta_1)).*conj(l_2).*(conj(theta_2).^2./6.0+1.0))-My_ext_2.*(cos(conj(theta_1)).*cos(conj(theta_2))-sin(conj(theta_1)).*sin(conj(theta_2)))-Fx_ext_2.*(conj(l_1).*(-1.0./2.0)+(sin(conj(theta_1)).*conj(l_2).*conj(theta_2))./2.0+cos(conj(theta_1)).*conj(l_2).*(conj(theta_2).^2./6.0+1.0))-My_ext_1.*cos(conj(theta_1))+(Fz_ext_1.*conj(l_1).*conj(theta_1))./3.0;
else
    t0 = NaN;
end
if ((1.0./1.0e+2 < abs(theta_2)) & (abs(theta_1) ~= 1.0./1.0e+2))
    t1 = -Fx_ext_2.*(cos(conj(theta_1)).*conj(l_2).*1.0./conj(theta_2).^2.*(cos(conj(theta_2))-1.0)+(cos(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2))./conj(theta_2)+(cos(conj(theta_2)).*sin(conj(theta_1)).*conj(l_2))./conj(theta_2)-sin(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2).*1.0./conj(theta_2).^2)-Fz_ext_2.*(sin(conj(theta_1)).*conj(l_2).*1.0./conj(theta_2).^2.*(cos(conj(theta_2))-1.0)-(cos(conj(theta_1)).*cos(conj(theta_2)).*conj(l_2))./conj(theta_2)+cos(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2).*1.0./conj(theta_2).^2+(sin(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2))./conj(theta_2))-(Fk2_act_1+Fk2_act_2).*(cos(conj(theta_1)).*conj(l_2).*1.0./conj(theta_2).^2.*(cos(conj(theta_2))-1.0)+(cos(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2))./conj(theta_2)+(cos(conj(theta_2)).*sin(conj(theta_1)).*conj(l_2))./conj(theta_2)-sin(conj(theta_1)).*sin(conj(theta_2)).*conj(l_2).*1.0./conj(theta_2).^2)-My_ext_2.*(cos(conj(theta_1)).*cos(conj(theta_2))-sin(conj(theta_1)).*sin(conj(theta_2)));
elseif ((abs(theta_2) < 1.0./1.0e+2) & (abs(theta_1) ~= 1.0./1.0e+2))
    t1 = ((cos(conj(theta_1)).*conj(l_2))./2.0-(sin(conj(theta_1)).*conj(l_2).*conj(theta_2))./3.0).*(Fk2_act_1+Fk2_act_2)+Fx_ext_2.*((cos(conj(theta_1)).*conj(l_2))./2.0-(sin(conj(theta_1)).*conj(l_2).*conj(theta_2))./3.0)+Fz_ext_2.*((sin(conj(theta_1)).*conj(l_2))./2.0+(cos(conj(theta_1)).*conj(l_2).*conj(theta_2))./3.0)-My_ext_2.*(cos(conj(theta_1)).*cos(conj(theta_2))-sin(conj(theta_1)).*sin(conj(theta_2)));
else
    t1 = NaN;
end
u = [t0;t1];
